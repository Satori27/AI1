import requests


def get_wikipedia_content(qid, lang="ru"):
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏—é –ø–æ Q-ID
    wikidata_url = f"https://www.wikidata.org/wiki/Special:EntityData/{qid}.json"
    response = requests.get(wikidata_url).json()
    
    sitelinks = response["entities"][qid]["sitelinks"]
    if f"{lang}wiki" not in sitelinks:
        return f"–°—Ç–∞—Ç—å—è –Ω–∞ {lang} –í–∏–∫–∏–ø–µ–¥–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è {qid}."

    title = sitelinks[f"{lang}wiki"]["title"]
    
    # 2. –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ –∏–∑ –í–∏–∫–∏–ø–µ–¥–∏–∏
    wikipedia_url = f"https://{lang}.wikipedia.org/api/rest_v1/page/summary/{title}"
    response = requests.get(wikipedia_url).json()

    if "extract" not in response:
        return f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ '{title}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."

    return f"üìÑ {title}\n\n{response['extract']}"

def get_wikidata_id(article_name, lang="ru"):
    url = "https://query.wikidata.org/sparql"
    
    query = f"""
    SELECT ?item WHERE {{
      ?item rdfs:label "{article_name}"@{lang}.
    }}
    """

    headers = {
        "User-Agent": "PythonWikidataClient/1.0",
        "Accept": "application/json"
    }

    response = requests.get(url, params={"query": query, "format": "json"}, headers=headers)
    
    if response.status_code != 200:
        raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")

    data = response.json()
    results = data.get("results", {}).get("bindings", [])
    
    if not results:
        return f"–°—Ç–∞—Ç—å—è '{article_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Wikidata."

    item_id = results[0]["item"]["value"].split("/")[-1]  # –ò–∑–≤–ª–µ–∫–∞–µ–º Q-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    text = get_wikipedia_content(item_id)

    return f"üîπ ID —Å—Ç–∞—Ç—å–∏ '{article_name}' –≤ Wikidata: {item_id} \n Text:{text}"

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
article_name = "–±–æ–ª–µ–∑–Ω—å"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
print(get_wikidata_id(article_name))
